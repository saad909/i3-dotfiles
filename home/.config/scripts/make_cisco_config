#!/usr/bin/python
import os,sys
import re
from multiprocessing import Pool
from pathlib import Path


# file path
home_address = str(Path.home())
file_content = ""
dir_path = os.path.join(home_address, "Documents",
                        "Experiments")
file_path = os.path.join(dir_path,"test.ini")


def write_configs(device):
    try:
        global dir_path
        # old_regex = "^![\!\s]*{device}\s*[\n]*((?:\n[^\!]*)+)" 
        # regex = rf"^[;\s]*{device}[\n\s]+[^;]*"
        regex = rf"^[;\s]*{device}(?P<config>[\n\s]+[^;]*)"
        result_list = re.findall(regex.strip(), file_content, re.MULTILINE)
        result = ' '.join([elem for elem in result_list])
        result = os.linesep.join([s for s in result.splitlines() if s])
        file = os.path.join(dir_path, device+".ini")
        with open(file, 'w') as handler:
            handler.write(result)

        # write for full topology
        file = os.path.join(dir_path, "full_toplogy.ini")
        with open(file, 'a') as handler:
            handler.write(result)

        return
    except Exception as error:
        print(error)


def main(argv):

    global file_content, file_path,dir_path
    if argv[1]:
        file_path=os.path.abspath(argv[1])
        dir_path = os.path.dirname(file_path)


    try:
        with open(file_path, 'r') as handler:
            file_content = handler.read()
    except Exception as error:
        print(error)
        return

    # get devices name by reading first line
    all_devices = list()
    try:
        infile = open(file_path, 'r')
        first_line = infile.readline()
        first_line = first_line.replace(";", "").strip()
        all_devices = first_line.split(",")

        session_file_contents = '\n'.join([i for i in all_devices[0:]])
        with open(os.path.join(dir_path,"SessionList.txt"),"w") as handler:
            handler.write(session_file_contents)
    except Exception:
        print("Please enter the devices name on first line of your master config file")
        return


    # remove full topology file if exists
    full_toplogy_file = os.path.join(dir_path,"full_toplogy.ini")
    if os.path.isfile(full_toplogy_file):
        os.remove(full_toplogy_file)

    # get the contents of each device into a separate file
    p = Pool(len(all_devices))
    p.map(write_configs, all_devices)
    p.close()
    p.join()


if __name__ == "__main__":
    main(sys.argv)
